<?php
/**
  @file
*/

/// Implements hook_view_api ().
function soccer_boss_views_api () {
  return array ('api' => 3.0);
}

/**
  @brief Implements hook_block_info_alter ().
  @details
    Enables the core blocks and moves them to their
    designated regions.
  @see soccer_boss_block_settings ().
  @see soccer_boss_set_block_visibilities ().
*/
function soccer_boss_block_info_alter (&$blocks, $theme, $code_blocks) {
  module_load_include ('inc', 'soccer_boss');

  foreach (soccer_boss_block_settings () as $delta => $settings) {
    $module = $settings ['module'];

    if (empty ($blocks [$module][$delta]['pages'])) {
      $blocks [$module][$delta]['status']     = 1;
      $blocks [$module][$delta]['region']     = $settings ['region'];
      $blocks [$module][$delta]['visibility'] = 1;
      $blocks [$module][$delta]['pages']      = 'node/*';
    }
  }
}

/// Implements hook_menu ().
function soccer_boss_menu () {
  return array (
    // I. Defines the Coach menu tabs.
    'node/%node/team' => array (
      'title'            => t ('Team'),
      'description'      => t ('Redirects the user to the team associated with the given coach\'s node id.'),
      // 'access callback'  => '_soccer_boss_check_type',
      // 'access arguments' => array (1, 'soccer_boss_coach'),
      'page callback'    => 'soccer_boss_coach_team_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'weight'           => 1
    ),
    // II. Defines the Player menu tabs.
    'node/%node/stats' => array (
      'title'            => t ('Stats'),
      'description'      => t ('Redirects the user to the stats page.'),
      'access callback'  => '_soccer_boss_check_type',
      'access arguments' => array (1, 'soccer_boss_player'),
      'page callback'    => 'soccer_boss_player_stats_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'weight'           => 1
    ),
    'node/%node/team' => array (
      'title'            => t ('Team'),
      'description'      => t ('Redirects the user to the player\'s team page.'),
      'access callback'  => '_soccer_boss_check_type',
      'access arguments' => array (1, 'soccer_boss_player'),
      'page callback'    => 'soccer_boss_player_team_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'weight'           => 1
    ),
    // III. Defines the Team menu tabs.
    'node/%node/coach' => array (
      'title'            => t ('Coach'),
      'description'      => t ('Displays information about the team\'s coach.'),
      'access callback'  => '_soccer_boss_check_type',
      'access arguments' => array (1, 'soccer_boss_team'),
      'page callback'    => 'soccer_boss_team_coach_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'weight'           => 1
    ),
    'node/%node/roster' => array (
      'title'            => t ('Roster'),
      'description'      => t ('Lists the team\'s players.'),
      'access callback'  => '_soccer_boss_check_type',
      'access arguments' => array (1, 'soccer_boss_team'),
      'page callback'    => 'soccer_boss_team_roster_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'weight'           => 2
    ),
    'node/%node/games' => array (
      'title'            => t ('Matches'),
      'description'      => t ('Lists the team\'s past and upcoming matches.'),
      'access callback'  => '_soccer_boss_check_type',
      'access arguments' => array (1, 'soccer_boss_team'),
      'page callback'    => 'soccer_boss_team_games_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'weight'           => 3
    )
  );
}

/**
  @brief Defines a menu access callback that
    returns true iff the given node has the given
    type.
  @param $node (object) the referenced node.
  @param $type (string) the required node type.
  @return (boolean).
*/
function _soccer_boss_check_type ($node, $type) {
  return $node->type == $type;
}

/**
*/
function soccer_boss_coach_team_page ($node) {
  module_load_include ('inc', 'soccer_boss');

  watchdog (
    'soccer_boss',
    '[soccer_boss_coach_team_page]'
  );

  // I. Retrieve the team node ids.
  $ids = soccer_boss_get_references ($node->nid, 'node', 'soccer_boss_team_coach');

  watchdog (
    'soccer_boss',
    '[soccer_boss_coach_team_page] ids: <pre>@ids</pre>',
    array (
      '@ids' => print_r ($ids, true)
  ));

  // II. Retrieve the team node uri.
  if (empty ($ids)) {
    drupal_set_message ('This coach is not currently affiliated with any known teams.');
    $uri = node_uri ($node);
  } else {
    $uri = node_uri (node_load ($ids [0])); 
  }

  // III. Redirect the user.
  drupal_goto ($uri ['path']);
}

/**
  @brief Redirects the user to the Player's Stats view.
  @param $node (object) the player node.
*/
function soccer_boss_player_stats_page ($node) {
  drupal_goto ("player-stats/$node->nid");
}

/**
  @brief Redirects the user to the Player's Team page.
  @param $node (object) the player node.
*/
function soccer_boss_player_team_page ($node) {
  if (empty ($node->soccer_boss_player_team ['und'])) {
    drupal_set_message ('This player is not associated with a team.');
    $uri = node_uri ($node);
  } else {
    $uri = node_uri (node_load ($node->soccer_boss_player_team ['und'][0]['target_id']));
  }
  drupal_goto ($uri ['path']);
}

/**
  @brief Redirects the user to profile of the head
    coach associated with the given team.
  @param $node (object) the team node.
*/
function soccer_boss_team_coach_page ($node) {
  if (empty ($node->soccer_boss_team_coach ['und'])) {
    drupal_set_message ('This team does not have a Head Coach.');
    $uri = node_uri ($node);
  } else {
    $uri = node_uri (node_load ($node->soccer_boss_team_coach ['und'][0]['target_id']));
  }
  drupal_goto ($uri ['path']);
}

/**
  @brief Redirects the user to the Team Roster page.
  @param $node (object) the current team node.
*/
function soccer_boss_team_roster_page ($node) {
  drupal_goto ('team-roster/' . $node->nid);
}

/**
  @brief Redirects the user to the Team Games page.
  @param $node (object) the current team node.
*/
function soccer_boss_team_games_page ($node) {
  drupal_goto ('team-games/' . $node->nid);
}
