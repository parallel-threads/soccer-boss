<?php
/**
  @file
*/

/// Implements hook_view_api ().
function soccer_boss_views_api () {
  return array ('api' => 3.0);
}

/**
  @brief Implements hook_block_info_alter ().
  @details
    Enables the core blocks and moves them to their
    designated regions.
  @see soccer_boss_block_settings ().
  @see soccer_boss_set_block_visibilities ().
*/
function soccer_boss_block_info_alter (&$blocks, $theme, $code_blocks) {
  module_load_include ('inc', 'soccer_boss');

  foreach (soccer_boss_block_settings () as $delta => $settings) {
    $module = $settings ['module'];

    if (empty ($blocks [$module][$delta]['pages'])) {
      $blocks [$module][$delta]['status']     = 1;
      $blocks [$module][$delta]['region']     = $settings ['region'];
      $blocks [$module][$delta]['visibility'] = 1;
      $blocks [$module][$delta]['pages']      = 'node/*';
    }
  }
}

/// Implements hook_menu ().
function soccer_boss_menu () {
  return array (
    // I. Defines the Coach menu tabs.
    'node/%node/team' => array (
      'title'            => t ('Team'),
      'description'      => t ('Redirects the user to the team associated with the given coach\'s node id.'),
      'access callback'  => '_soccer_boss_check_type',
      'access arguments' => array (1, 'soccer_boss_coach'),
      'page callback'    => 'soccer_boss_coach_team_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'file'             => 'soccer_boss.page.inc',
      'weight'           => 1
    ),
    // II. Defines the Player menu tabs.
    'node/%node/stats' => array (
      'title'            => t ('Stats'),
      'description'      => t ('Redirects the user to the stats page.'),
      'access callback'  => '_soccer_boss_check_type',
      'access arguments' => array (1, 'soccer_boss_player'),
      'page callback'    => 'soccer_boss_player_stats_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'file'             => 'soccer_boss.page.inc',
      'weight'           => 1
    ),
    'node/%node/team' => array (
      'title'            => t ('Team'),
      'description'      => t ('Redirects the user to the player\'s team page.'),
      'access callback'  => '_soccer_boss_check_type',
      'access arguments' => array (1, 'soccer_boss_player'),
      'page callback'    => 'soccer_boss_player_team_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'file'             => 'soccer_boss.page.inc',
      'weight'           => 1
    ),
    // III. Defines the Team menu tabs.
    'node/%node/coach' => array (
      'title'            => t ('Coach'),
      'description'      => t ('Displays information about the team\'s coach.'),
      'access callback'  => '_soccer_boss_check_type',
      'access arguments' => array (1, 'soccer_boss_team'),
      'page callback'    => 'soccer_boss_team_coach_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'file'             => 'soccer_boss.page.inc',
      'weight'           => 1
    ),
    'node/%node/roster' => array (
      'title'            => t ('Roster'),
      'description'      => t ('Lists the team\'s players.'),
      'access callback'  => '_soccer_boss_check_type',
      'access arguments' => array (1, 'soccer_boss_team'),
      'page callback'    => 'soccer_boss_team_roster_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'file'             => 'soccer_boss.page.inc',
      'weight'           => 2
    ),
    'node/%node/games' => array (
      'title'            => t ('Matches'),
      'description'      => t ('Lists the team\'s past and upcoming matches.'),
      'access callback'  => '_soccer_boss_check_type',
      'access arguments' => array (1, 'soccer_boss_team'),
      'page callback'    => 'soccer_boss_team_games_page',
      'page arguments'   => array (1),
      'type'             => MENU_LOCAL_TASK,
      'file'             => 'soccer_boss.page.inc',
      'weight'           => 3
    ),
    'player-comparison' => array (
      'title'            => t ('Player Comparison'),
      'description'      => t ('Displays two players side-by-side for comparison.'),
      'access callback'  => true,
      'page callback'    => 'soccer_boss_player_comparison',
      'page arguments'   => array (1, 2),
      'type'             => MENU_CALLBACK,
      'file'             => 'soccer_boss.page.inc',
    ),
    'player-comparison-form' => array (
      'title'            => t ('Player Comparison'),
      'description'      => t ('Lets users select players to compare.'),
      'access callback'  => true,
      'page callback'    => 'drupal_get_form',
      'page arguments'   => array ('soccer_boss_player_comparison_form'),
      'type'             => MENU_NORMAL_ITEM
    )
  );
}

/**
  @brief Defines a menu access callback that
    returns true iff the given node has the given
    type.
  @param $node (object) the referenced node.
  @param $type (string) the required node type.
  @return (boolean).
*/
function _soccer_boss_check_type ($node, $type) {
  return $node->type == $type;
}

/**
  @brief
    Returns the Player Comparison form. The form is
    used to select players to compare on the player
    comparison page.
*/
function soccer_boss_player_comparison_form ($form, &$form_state) {
  module_load_include ('inc', 'soccer_boss');

  return array (
    'player_x' => array (
      '#type'            => 'entityreference',
      '#title'           => t ('First Player'),
      '#era_entity_type' => 'node',
      '#era_bundle'      => soccer_boss_PLAYER_TYPE,
      '#era_cardinality' => 1
    ),
    'player_y' => array (
      '#type'            => 'entityreference',
      '#title'           => t ('Second Player'),
      '#era_entity_type' => 'node',
      '#era_bundle'      => soccer_boss_PLAYER_TYPE,
      '#era_cardinality' => 1
    ),
    'submit' => array (
      '#type'  => 'submit',
      '#value' => 'Compare!'
    )
  );
}

/**
  @brief Processes a Player Comparison Form
    submission and redirects the user to the Player
    Comparison Page.
*/
function soccer_boss_player_comparison_form_submit ($form, &$form_state) {
  watchdog (
    'soccer_boss',
    '[soccer_boss_player_comparison_form_submit] values: <pre>@values</pre>',
    array (
      '@values' => print_r ($form_state ['values'], true)
  ));

  drupal_goto ('player-comparison/' . 
    $form_state ['values']['player_x']['entity_id'] . '/' .
    $form_state ['values']['player_y']['entity_id']
  );
}
