<?php
/**
  @file
  @brief The Stats module defines the Stat and Stat
    Value entity types. These entity types are used
    to represent statistics about other entities.


  @TODO
    add an entity reference field to stat_value to allow relationships in views. (or add property info to stat prop.)
*/

/// Implements hook_permission ().
function stat_permission () {
  return array (
    'administer stat entities' => array (
      'title'           => t ('Administer stats'),
      'description'     => t ('Allows users to administer (create/view/edit) stats.')
    ),
    'create stat entities' => array (
      'title'           => t ('Create stats'),
      'description'     => t ('Allows users to create stats.')
    ),
    'view stat entities' => array (
      'title'           => t ('View stats'),
      'description'     => t ('Allows users to view stats.')
    ),
    'edit any stat entities' => array (
      'title'           => t ('Edit any stats'),
      'description'     => t ('Allows users to edit any stats.')
    ),
    'edit own stat entities' => array (
      'title'           => t ('Edit own stats'),
      'description'     => t ('Allows users to edit their own stats.')
  ));
}

/**
  @brief Implements hook_entity_info ().
  @details Defines the Stat and Stat Value entity types.
*/
function stats_entity_info () {
  module_load_include ('inc', 'stats');
  return array (
    'stat' => array (
      'label'                  => t ('Stat'),
      'controller class'       => 'EntityAPIController',
      'base table'             => 'stats',
      'fieldable'              => true,
      'entity keys'            => array (
        'id'    => 'id',
        'label' => 'name'
      ),
      'view modes'             => array (
        'web' => array (
          'label'           => t ('Web'),
          'custom settings' => false
        ),
        'rss' => array (
          'label'           => t ('RSS'),
          'custom settings' => false
      )),
      'views controller class' => 'EntityDefaultViewsController'
    ),
    'stat_value' => array (
      'label'                  => t ('Stat Value'),
      'label callback'         => 'stats_value_label',
      'controller class'       => 'EntityAPIController',
      'base table'             => 'stat_values',
      'fieldable'              => true,
      'entity keys'            => array (
        'id'     => 'id'
      ),
      'view modes'             => array (
        'web' => array (
          'label'           => t ('Web'),
          'custom settings' => false
        ),
        'rss' => array (
          'label'           => t ('RSS'),
          'custom settings' => false
      )),
      'views controller class' => 'EntityDefaultViewsController'
  ));
}

/// Implements callback_entity_info_label ().
function stats_value_label ($entity, $entity_type) {
  $stat = stats_load ($entity->stat);
  return $stat->name;
}

/// Implements hook_menu ().
function stats_menu () {
  return array (
    'stat' => array (
      'title'            => t ('View Stat'),
      'description'      => t ('Displays information about a given stat.'),
      'page callback'    => 'stats_page',
      'page arguments'   => array (1),
      'access callback'  => true,
      'access arguments' => array ('view stat entities'),
      'type'             => MENU_NORMAL_ITEM,
      'file'             => 'stats.page.inc'
    ),
    'stat/add' => array (
      'title'            => t ('Create Stat'),
      'description'      => t ('Creates a stat.'),
      'page callback'    => 'drupal_get_form',
      'page arguments'   => array ('stats_add_form'),
      'access callback'  => 'user_access',
      'access arguments' => array ('create stat entities'),
      'type'             => MENU_NORMAL_ITEM,
    ),
    'stat/%/edit' => array (
      'title'            => t ('Edit Stat'),
      'description'      => t ('Edits a stat.'),
      'page callback'    => 'drupal_get_form',
      'page arguments'   => array ('stats_edit_form', 1),
      'access callback'  => 'user_access',
      'access arguments' => array ('edit any stat entities'),
      'type'             => MENU_NORMAL_ITEM,
    ),
    'stat/value' => array (
      'title'            => t ('View Stat Value'),
      'description'      => t ('Displays a given stat value.'),
      'page callback'    => 'stats_value_page',
      'access callback'  => true,
      'access arguments' => array ('view stat entities'),
      'type'             => MENU_NORMAL_ITEM,
      'file'             => 'stats.page.inc'
    ),
    'stat/%/value/add' => array (
      'title'            => t ('Create Stat Value'),
      'description'      => t ('Creates a stat value.'),
      'page callback'    => 'drupal_get_form',
      'page arguments'   => array ('stats_value_add_form', 1),
      'access callback'  => 'user_access',
      'access arguments' => array ('create stat entities'),
      'type'             => MENU_NORMAL_ITEM
    ),
  );
}

/// Returns the Create Stat form.
function stats_add_form ($form, &$form_state) {
  $form = array ();
  $stat = new stdClass ();
  field_attach_form ('stat', $stat, $form, $form_state, 
    entity_language ('stat', $stat));

  $form ['submit'] = array (
    '#type'  => 'submit',
    '#value' => 'Create'
  );
  return $form;
}

/**
  @brief Processes the Create Stat form.
  @details Creates a Stat entity from the given
    form values.
*/
function stats_add_form_submit ($form, &$form_state) {
  module_load_include ('inc', 'stats');

  $stat = entity_create ('stat', array ('type' => 'stat'));

  $stat->name    = $form_state ['values']['stats_name']['und'][0]['value'];
  $stat->subject = $form_state ['values']['stats_subject']['und'][0]['target_id'];

  entity_form_submit_build_entity ('stat', $stat, $form, $form_state);

  if (!stats_save ($stat)) {
    watchdog (
      'stats',
      '[stats_add_form_submit] Error: an error occured while trying to save a stat. stat: <pre>@stat</pre>',
      array (
        '@stat' => print_r ($stat, true)
    ));
  }
}

/// Returns the Edit Stat form.
function stats_edit_form ($form, &$form_state, $statId) {
  module_load_include ('inc', 'stats');

  $stat = stats_load ($statId);

  $form = array (
    'stat' => array (
      '#type'  => 'hidden',
      '#value' => $statId
  ));

  field_attach_form ('stat', $stat, $form, $form_state, 
    entity_language ('stat', $stat));

  $form ['submit'] = array (
    '#type'  => 'submit',
    '#value' => 'Create'
  );
  return $form;
}

/**
  @brief Processes the Edit Stat form.
  @details Updates a Stat entity using the given
    form values.
*/
function stats_edit_form_submit ($form, &$form_state) {
  module_load_include ('inc', 'stats');

  $stat          = stats_load ($form_state ['values']['stat']);
  $stat->name    = $form_state ['values']['stats_name']['und'][0]['value'];
  $stat->subject = $form_state ['values']['stats_subject']['und'][0]['target_id'];

  entity_form_submit_build_entity ('stat', $stat, $form, $form_state);

  if (!stats_save ($stat)) {
    watchdog (
      'stats',
      '[stats_add_form_submit] Error: an error occured while trying to save a stat. stat: <pre>@stat</pre>',
      array (
        '@stat' => print_r ($stat, true)
    ));
  }
}

/**
  @brief Returns the Add Stat Value form.
  @param $form (array) the form array.
  @param $form_state (array) the form state array.
  @param $statId (integer) the stat id.
  @return (array) the form array.
*/
function stats_value_add_form ($form, &$form_state, $statId) {
  module_load_include ('inc', 'stats');

  $form = array ();
  $statValue = new stdClass ();
  field_attach_form ('stat_value', $statValue, $form, $form_state,
    entity_language ('stat_value', $statValue));
  
  $stat = is_null ($statId) ? null : stats_load ($statId);
  if (!is_null ($stat)) {
    $form ['stats_value_stat']['#type'] = 'hidden';    
    $form ['stats_value_stat']['und'][0]['target_id']['#default_value'] = $stat->name . ' (' . $statId . ')';
  }

  $form ['submit'] = array (
    '#type'  => 'submit',
    '#value' => 'Create'
  );
  return $form;
}

/**
  @brief Processes the Add Stat Value form.
  @details Creates a Stat Value entity from the
    given form values.
*/
function stats_value_add_form_submit ($form, &$form_state) {
  module_load_include ('inc', 'stats');

  $statValue = entity_create ('stat_value', array ('type' => 'stat_value'));
  $statValue->stat    = $form_state ['values']['stats_value_stat']['und'][0]['target_id'];
  $statValue->content = $form_state ['values']['stats_value_content']['und'][0]['value'];
  $statValue->date    = $form_state ['values']['stats_value_date']['und'][0]['value'];

  entity_form_submit_build_entity ('stat_value', $statValue, $form, $form_state);

   if (!stats_value_save ($statValue)) {
     watchdog (
       'stats',
       '[stats_value_add_form_submit] Error: an error occured while trying to save a stat value. <pre>@statValue</pre>',
       array (
         '@statValue' => print_r ($statValue, true)
     ));
   }
}
